# Анаграммы (Word Jumble-Mumble)
#
# Компьютер выбирает какое-либо слово и хаотически переставляет его буквы
# Задача игрока - восстановить исходное слово
import random
# Создадим последовательность слов, из которых комьпьютер будет выбирать
WORDS = ("Питон", "Анаграмма", "Простая", "Сложная", "Ответ", "Подстаканник")
help = ("Это змея.", "Это игра.", "Антоним: сложная.", "Такая игра заставит попотеть.", "Это дают на вопрос.", "Одежда для стакана.")
# Случайным образом выберем из последовательности одно слово
word = random.choice(WORDS)
# Создадим переменную, с которой будет затем сопоставлена версия игрока
correct = word
# Создадим анаграмму выбранного слова, в которой буквы будут расставлены хаотично
jumble = ""
while word:
    position = random.randrange(len(word))
    jumble += word[position]
    word = word[:position] + word [(position +1):]
# Создадим цикл, чтобы отсчет шел с нулевой позиции
counter = -1
for x in WORDS:
    counter += 1
    if x == correct:
        help_position = counter
# 
# Начало игры
print(
""""
Добро пожаловать в игру 'Анаграммы!'!
Надо переставить буквы так, чтобы получилось осмысленное слово.
У вас есть 10 бонусов. При каждом неправильном ответе, вы будете терять по 1. 
При растрате всех бонусов игра заканчивается.
(Для выхода нажмите Enter, не вводя своей версии.)
"""
)
print("Вот анаграмма: ", jumble)
# 
# Принимаем в переменную guess пользовательский ввод, и
# сразу создаем переменную бонусов, которая изначально будет равна 10
guess = input("\nПопробуйте отгадать исходное слово: ")
bonus = 10
# Пишем цикл, который будет отнимать по 1 из бонуса до тех пор,
# пока игрок не выиграет или не проиграет

while guess != correct and guess != "":
    print ('К сожалению, вы не правы. Подсказка: ', help[help_position])
    bonus -= 1
    guess = input("\nПопробуйте отгадать исходное слово: ")
if guess == correct:
    print ('Да, именно так! Вы отгадали!\n')
    print('Спасибо за игру! Заработанный вами бонус составляет ', bonus, ' очков')
input('\nНажмите Enter для выхода')